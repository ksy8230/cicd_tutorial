name: Rroject PR
on:
  pull_request: # Branch에서 특정 이벤트가 일어났을 때만 실행
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout source code. # 레포지토리 체크아웃
        uses: actions/checkout@master

      - name: Cache node modules # node modules 캐싱
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Dependencies # 의존 파일 설치
        run: npm install

      - name: Run Test Code
        run: npm run test:watch

      - name: if fail
        uses: actions/github-script@0.2.0
        with:
          github-token: ${{github.token}}
          script: |
            const ref = "${{github.ref}}"
            const pull_number = Number(ref.split("/")[2])
            await github.pulls.createReview({
              ...context.repo,
              pull_number,
              body:"테스트코드를 다시 확인해주세요. ",
              event: "REQUEST_CHANGES"
            })
            await github.pulls.update({
              ...context.repo,
              pull_number,
              state: "closed"
            })
        if: failure()
      - name: Automatically Merge PR
        uses: plm9606/automerge_actions@1.2.2
        with:
          # 이벤트를 트리거하고 싶은 라벨 이름을 설정합니다. 기본 이름은 "automerge" 입니다.
          label-name: "automerge"
          # 최소 리뷰어 수를 지정할 수 있습니다. 기본은 1명입니다.
          reviewers-number: 1
          # "merge", "squash", "rebase" 중 한가지를 선택할 수 있습니다. 기본값은 "merge" 입니다
          merge-method: "merge"
          # GitHub WebHook Secret Token
          github-token: ${{ secrets.GITHUB_TOKEN }}
