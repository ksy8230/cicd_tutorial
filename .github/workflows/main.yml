name: React build
on:
  pull_request: # master Branch에서 특정 이벤트가 일어났을 때만 실행
    branches:
      - feature

jobs:
  build:
    runs-on: ubuntu-18.04
    #strategy:
    #  matrix:
    #    node-version: [8.x, 10.x, 12.x] # ".x" 로 최신 버전도 사용하고 직접 버전 지정도 가능하다
    steps:
      - name: Checkout source code. # 레포지토리 체크아웃
        uses: actions/checkout@master

      - name: Cache node modules # node modules 캐싱
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies # 의존 파일 설치
        run: npm install

      - name: Run Test Code
        run: npm run test:watch

      - name: if fail
        uses: actions/github-script@0.8.0
        with:
          github-token: ${{ github.token }}
          script: |
            const ref = "${{github.ref}}"
            const pull_number = Number(ref.split("/")[2])
            await github.pulls.createReview({
            ...context.repo,
            pull_number,
            body:"테스트코드를 다시 확인해주세요.",
            event:"REQUEST_CHANGES"
            })
            await github.pulls.update({
            ...context.repo,
            pull_number,
            state:"closed"
            })
        if: failure()

      # - name: Build # React Build
      #   run: npm run build

      # - name: Deploy # S3에 배포하기
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #   run: |
      #     aws s3 cp \
      #       --recursive \
      #       --region ap-northeast-2 \
      #       build s3://github-action-tutorial # 자신의 레포지토리로 변경해주세요.
